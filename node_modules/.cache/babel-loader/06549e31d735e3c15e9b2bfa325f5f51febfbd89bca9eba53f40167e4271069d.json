{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nfunction useFormAndValidation() {\n  _s();\n  const [values, setValues] = useState({});\n  const [errors, setErrors] = useState({});\n  const [isValid, setIsValid] = useState(true);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({\n      ...values,\n      [name]: value\n    });\n    setErrors({\n      ...errors,\n      [name]: e.target.validationMessage\n    });\n    setIsValid(e.target.closest('form').checkValidity());\n  };\n  const resetForm = useCallback(function () {\n    let newValues = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let newErrors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let newIsValid = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    setValues(newValues);\n    setErrors(newErrors);\n    setIsValid(newIsValid);\n  }, [setValues, setErrors, setIsValid]);\n  return {\n    values,\n    handleChange,\n    errors,\n    isValid,\n    resetForm,\n    setValues,\n    setIsValid\n  };\n}\n_s(useFormAndValidation, \"Y0WGsDEBKI5bJvl28kXq1E/Vqvk=\");\nexport default useFormAndValidation;","map":{"version":3,"names":["useState","useCallback","useFormAndValidation","_s","values","setValues","errors","setErrors","isValid","setIsValid","handleChange","e","name","value","target","validationMessage","closest","checkValidity","resetForm","newValues","arguments","length","undefined","newErrors","newIsValid"],"sources":["/Users/ifloki/Documents/Dev/mesto-react/src/hooks/useFormAndValidation.js"],"sourcesContent":["import { useState, useCallback } from 'react';\n\nfunction useFormAndValidation() {\n\tconst [ values, setValues ] = useState({});\n\tconst [ errors, setErrors ] = useState({});\n\tconst [ isValid, setIsValid ] = useState(true);\n\n\tconst handleChange = (e) => {\n\t\tconst {name, value} = e.target\n\t\tsetValues({...values, [name]: value});\n\t\tsetErrors({...errors, [name]: e.target.validationMessage});\n\t\tsetIsValid(e.target.closest('form').checkValidity());\n\t};\n\n\tconst resetForm = useCallback((newValues = {}, newErrors = {}, newIsValid = false) => {\n\t\tsetValues(newValues);\n\t\tsetErrors(newErrors);\n\t\tsetIsValid(newIsValid);\n\t}, [setValues, setErrors, setIsValid]);\n\n\treturn { values, handleChange, errors, isValid, resetForm, setValues, setIsValid };\n}\n\nexport default useFormAndValidation;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAE7C,SAASC,oBAAoBA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAAEC,MAAM,EAAEC,SAAS,CAAE,GAAGL,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAAEM,MAAM,EAAEC,SAAS,CAAE,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAAEQ,OAAO,EAAEC,UAAU,CAAE,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMU,YAAY,GAAIC,CAAC,IAAK;IAC3B,MAAM;MAACC,IAAI;MAAEC;IAAK,CAAC,GAAGF,CAAC,CAACG,MAAM;IAC9BT,SAAS,CAAC;MAAC,GAAGD,MAAM;MAAE,CAACQ,IAAI,GAAGC;IAAK,CAAC,CAAC;IACrCN,SAAS,CAAC;MAAC,GAAGD,MAAM;MAAE,CAACM,IAAI,GAAGD,CAAC,CAACG,MAAM,CAACC;IAAiB,CAAC,CAAC;IAC1DN,UAAU,CAACE,CAAC,CAACG,MAAM,CAACE,OAAO,CAAC,MAAM,CAAC,CAACC,aAAa,CAAC,CAAC,CAAC;EACrD,CAAC;EAED,MAAMC,SAAS,GAAGjB,WAAW,CAAC,YAAwD;IAAA,IAAvDkB,SAAS,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IAAA,IAAEG,SAAS,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IAAA,IAAEI,UAAU,GAAAJ,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;IAChFf,SAAS,CAACc,SAAS,CAAC;IACpBZ,SAAS,CAACgB,SAAS,CAAC;IACpBd,UAAU,CAACe,UAAU,CAAC;EACvB,CAAC,EAAE,CAACnB,SAAS,EAAEE,SAAS,EAAEE,UAAU,CAAC,CAAC;EAEtC,OAAO;IAAEL,MAAM;IAAEM,YAAY;IAAEJ,MAAM;IAAEE,OAAO;IAAEU,SAAS;IAAEb,SAAS;IAAEI;EAAW,CAAC;AACnF;AAACN,EAAA,CAnBQD,oBAAoB;AAqB7B,eAAeA,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}