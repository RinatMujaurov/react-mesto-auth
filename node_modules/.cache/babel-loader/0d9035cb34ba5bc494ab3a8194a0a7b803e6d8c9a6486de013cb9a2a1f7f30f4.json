{"ast":null,"code":"var _jsxFileName = \"/Users/ifloki/Documents/Dev/mesto-react/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport ImagePopup from \"./ImagePopup\";\nimport PopupConfirm from \"./PopupConfirm\";\nimport api from \"../utils/Api\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(null);\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  }\n  function handleCardDelete(card) {\n    // Отправляем запрос в API на удаление карточки\n    api.deleteCard(card._id).then(() => {\n      // Обновляем стейт cards, исключая удаленную карточку\n      setCards(prevCards => prevCards.filter(c => c._id !== card._id));\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  const handleCardClick = card => {\n    setSelectedCard(card);\n  };\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard(null);\n  }\n  React.useEffect(() => {\n    api.getUserInfo().then(userData => {\n      setCurrentUser(userData);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  React.useEffect(() => {\n    api.getInitialCards().then(res => {\n      setCards([...res]);\n    }).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"root\",\n      className: \"root\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Main, {\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          onEditAvatar: handleEditAvatarClick,\n          onCardClick: handleCardClick,\n          onCardLike: handleCardLike,\n          onCardDelete: handleCardDelete,\n          cards: cards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          isOpen: isEditProfilePopupOpen,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n          isOpen: isAddPlacePopupOpen,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n          card: selectedCard,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PopupConfirm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          isOpen: isEditAvatarPopupOpen,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"T521E1SNRSuJz4PzM3iitgDDXx4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Header","Main","Footer","EditProfilePopup","AddPlacePopup","EditAvatarPopup","ImagePopup","PopupConfirm","api","CurrentUserContext","jsxDEV","_jsxDEV","App","_s","isEditProfilePopupOpen","setIsEditProfilePopupOpen","useState","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","then","newCard","state","map","c","handleCardDelete","deleteCard","prevCards","filter","catch","error","console","log","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","handleCardClick","closeAllPopups","useEffect","getUserInfo","userData","getInitialCards","res","err","Provider","value","children","id","className","fileName","_jsxFileName","lineNumber","columnNumber","onEditProfile","onAddPlace","onEditAvatar","onCardClick","onCardLike","onCardDelete","isOpen","onClose","_c","$RefreshReg$"],"sources":["/Users/ifloki/Documents/Dev/mesto-react/src/components/App.js"],"sourcesContent":["import React from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport ImagePopup from \"./ImagePopup\";\nimport PopupConfirm from \"./PopupConfirm\";\nimport api from \"../utils/Api\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] =\n    React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] =\n    React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(null);\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n      setCards((state) => state.map((c) => (c._id === card._id ? newCard : c)));\n    });\n  }\n\n  function handleCardDelete(card) {\n    // Отправляем запрос в API на удаление карточки\n    api\n      .deleteCard(card._id)\n      .then(() => {\n        // Обновляем стейт cards, исключая удаленную карточку\n        setCards((prevCards) => prevCards.filter((c) => c._id !== card._id));\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  const handleCardClick = (card) => {\n    setSelectedCard(card);\n  };\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  React.useEffect(() => {\n    api\n      .getUserInfo()\n      .then((userData) => {\n        setCurrentUser(userData);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  React.useEffect(() => {\n    api\n      .getInitialCards()\n      .then((res) => {\n        setCards([...res]);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div id=\"root\" className=\"root\">\n        <div className=\"page\">\n          <Header />\n          <Main\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onEditAvatar={handleEditAvatarClick}\n            onCardClick={handleCardClick}\n            onCardLike={handleCardLike}\n            onCardDelete={handleCardDelete}\n            cards={cards}\n          />\n          <Footer />\n          <EditProfilePopup\n            isOpen={isEditProfilePopupOpen}\n            onClose={closeAllPopups}\n          />\n          <AddPlacePopup\n            isOpen={isAddPlacePopupOpen}\n            onClose={closeAllPopups}\n          />\n          <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n          <PopupConfirm />\n          <EditAvatarPopup\n            isOpen={isEditAvatarPopupOpen}\n            onClose={closeAllPopups}\n          />\n        </div>\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}