{"ast":null,"code":"export default class Api {\n  constructor(baseUrl, token) {\n    this._baseUrl = baseUrl;\n    this._headers = {\n      authorization: token,\n      \"Content-Type\": \"application/json\"\n    };\n  }\n  _getResponseData(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    return res.json();\n  }\n  getUserInfo() {\n    return fetch(this._baseUrl + \"/users/me\", {\n      method: \"GET\",\n      headers: this._headers\n    }).then(res => this._getResponseData(res));\n  }\n  setUserInfo(data) {\n    return fetch(this._baseUrl + \"/users/me\", {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(res => this._getResponseData(res));\n  }\n  getInitialCards() {\n    return fetch(this._baseUrl + \"/cards\", {\n      method: \"GET\",\n      headers: this._headers\n    }).then(res => this._getResponseData(res));\n  }\n  addCard(data) {\n    return fetch(this._baseUrl + \"/cards\", {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(res => this._getResponseData(res));\n  }\n  deleteCard(cardId) {\n    return fetch(this._baseUrl + \"/cards/\" + cardId, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => this._getResponseData(res));\n  }\n  putLike(cardId) {\n    return fetch(this._baseUrl + \"/cards/\" + cardId + \"/likes\", {\n      method: \"PUT\",\n      headers: this._headers\n    }).then(res => this._getResponseData(res));\n  }\n  deleteLike(cardId) {\n    return fetch(this._baseUrl + \"/cards/\" + cardId + \"/likes\", {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => this._getResponseData(res));\n  }\n  setAvatar(data) {\n    return fetch(this._baseUrl + \"/users/me/avatar\", {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(res => this._getResponseData(res));\n  }\n}\nexport const api = new Api({\n  url: `https://mesto.nomoreparties.co/v1/cohort-63`,\n  headers: {\n    authorization: 'e2050b48-b9af-478f-bd01-da5552cfcb90',\n    'Content-Type': 'application/json'\n  }\n});\n// const api = new Api('https://mesto.nomoreparties.co/v1/cohort-63', 'cab53664-e4e9-4b11-babc-f697c128a306');\n\n// export default api;","map":{"version":3,"names":["Api","constructor","baseUrl","token","_baseUrl","_headers","authorization","_getResponseData","res","ok","Promise","reject","status","json","getUserInfo","fetch","method","headers","then","setUserInfo","data","body","JSON","stringify","getInitialCards","addCard","deleteCard","cardId","putLike","deleteLike","setAvatar","api","url"],"sources":["/Users/ifloki/Documents/Dev/mesto-react/src/utils/Api.js"],"sourcesContent":["export default class Api {\n  constructor(baseUrl, token) {\n    this._baseUrl = baseUrl;\n    this._headers = {\n      authorization: token,\n      \"Content-Type\": \"application/json\",\n    };\n  }\n\n  _getResponseData(res) {\n    if (!res.ok) {\n        return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    return res.json();\n  }\n\n  getUserInfo() {\n    return fetch(this._baseUrl + \"/users/me\", {\n      method: \"GET\",\n      headers: this._headers,\n    }).then((res) => this._getResponseData(res));\n  }\n\n  setUserInfo(data) {\n    return fetch(this._baseUrl + \"/users/me\", {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify(data),\n    }).then((res) => this._getResponseData(res));\n  }\n\n  getInitialCards() {\n    return fetch(this._baseUrl + \"/cards\", {\n      method: \"GET\",\n      headers: this._headers,\n    }).then((res) => this._getResponseData(res));\n  }\n\n  addCard(data) {\n    return fetch(this._baseUrl + \"/cards\", {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify(data),\n    }).then((res) => this._getResponseData(res));\n  }\n\n  deleteCard(cardId) {\n    return fetch(this._baseUrl + \"/cards/\" + cardId, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then((res) => this._getResponseData(res));\n  }\n\n  putLike(cardId) {\n    return fetch(this._baseUrl + \"/cards/\" + cardId + \"/likes\", {\n      method: \"PUT\",\n      headers: this._headers,\n    }).then((res) => this._getResponseData(res));\n  }\n\n  deleteLike(cardId) {\n    return fetch(this._baseUrl + \"/cards/\" + cardId + \"/likes\", {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then((res) => this._getResponseData(res));\n  }\n\n  setAvatar(data) {\n    return fetch(this._baseUrl + \"/users/me/avatar\", {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify(data),\n    }).then((res) => this._getResponseData(res));\n  }\n}\n\nexport const api = new Api({\n  url: `https://mesto.nomoreparties.co/v1/cohort-63`,\n  headers: {\n    authorization: 'e2050b48-b9af-478f-bd01-da5552cfcb90',\n    'Content-Type': 'application/json',\n  },\n});\n// const api = new Api('https://mesto.nomoreparties.co/v1/cohort-63', 'cab53664-e4e9-4b11-babc-f697c128a306');\n\n// export default api;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}