{"ast":null,"code":"export var BASE_URL=\"https://auth.nomoreparties.co\";function checkResponse(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430\".concat(res.status));}// Регистрация пользователя\nexport var register=function register(email,password){return fetch(\"\".concat(BASE_URL,\"/signup\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email:email,password:password})}).then(checkResponse);};// Авторизация пользователя\nexport var login=function login(email,password){return fetch(\"\".concat(BASE_URL,\"/signin\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email:email,password:password})}).then(checkResponse);};// Проверка токена\nexport var checkToken=function checkToken(token){return fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:'GET',headers:{'Content-Type':'application/json',Authorization:\"Bearer \".concat(token)}}).then(checkResponse);};","map":{"version":3,"names":["BASE_URL","checkResponse","res","ok","json","Promise","reject","concat","status","register","email","password","fetch","method","headers","body","JSON","stringify","then","login","checkToken","token","Authorization"],"sources":["/Users/ifloki/Documents/Dev/react-mesto-auth/src/utils/Auth.js"],"sourcesContent":["export const BASE_URL = \"https://auth.nomoreparties.co\";\n\nfunction checkResponse(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Ошибка${res.status}`);\n}\n// Регистрация пользователя\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ email, password }),\n  }).then(checkResponse);\n};\n\n// Авторизация пользователя\nexport const login = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ email, password }),\n  }).then(checkResponse);\n};\n\n// Проверка токена\nexport const checkToken = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n  }).then(checkResponse);\n};"],"mappings":"AAAA,MAAO,IAAM,CAAAA,QAAQ,CAAG,+BAA+B,CAEvD,QAAS,CAAAC,aAAaA,CAACC,GAAG,CAAE,CAC1B,GAAIA,GAAG,CAACC,EAAE,CAAE,CACV,MAAO,CAAAD,GAAG,CAACE,IAAI,CAAC,CAAC,CACnB,CACA,MAAO,CAAAC,OAAO,CAACC,MAAM,wCAAAC,MAAA,CAAUL,GAAG,CAACM,MAAM,CAAE,CAAC,CAC9C,CACA;AACA,MAAO,IAAM,CAAAC,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAIC,KAAK,CAAEC,QAAQ,CAAK,CAC3C,MAAO,CAAAC,KAAK,IAAAL,MAAA,CAAIP,QAAQ,YAAW,CACjCa,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEP,KAAK,CAALA,KAAK,CAAEC,QAAQ,CAARA,QAAS,CAAC,CAC1C,CAAC,CAAC,CAACO,IAAI,CAACjB,aAAa,CAAC,CACxB,CAAC,CAED;AACA,MAAO,IAAM,CAAAkB,KAAK,CAAG,QAAR,CAAAA,KAAKA,CAAIT,KAAK,CAAEC,QAAQ,CAAK,CACxC,MAAO,CAAAC,KAAK,IAAAL,MAAA,CAAIP,QAAQ,YAAW,CACjCa,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEP,KAAK,CAALA,KAAK,CAAEC,QAAQ,CAARA,QAAS,CAAC,CAC1C,CAAC,CAAC,CAACO,IAAI,CAACjB,aAAa,CAAC,CACxB,CAAC,CAED;AACA,MAAO,IAAM,CAAAmB,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAIC,KAAK,CAAK,CACnC,MAAO,CAAAT,KAAK,IAAAL,MAAA,CAAIP,QAAQ,cAAa,CACnCa,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClCQ,aAAa,WAAAf,MAAA,CAAYc,KAAK,CAChC,CACF,CAAC,CAAC,CAACH,IAAI,CAACjB,aAAa,CAAC,CACxB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}