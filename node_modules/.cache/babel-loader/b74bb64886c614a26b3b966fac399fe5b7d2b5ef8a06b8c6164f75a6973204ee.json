{"ast":null,"code":"import _slicedToArray from\"/Users/ifloki/Documents/Dev/react-mesto-auth/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import{useLocation,Link}from\"react-router-dom\";import logo from\"../images/header-logo.svg\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function Header(_ref){var isLoggedIn=_ref.isLoggedIn,email=_ref.email,onSignOut=_ref.onSignOut;var location=useLocation();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isMenuOpen=_useState2[0],setIsMenuOpen=_useState2[1];var handleToggleMenu=function handleToggleMenu(){setIsMenuOpen(!isMenuOpen);};var renderHeaderText=function renderHeaderText(){if(location.pathname===\"/sign-up\"){return/*#__PURE__*/_jsx(Link,{to:\"/sign-in\",className:\"header__link\",children:\"\\u0412\\u0445\\u043E\\u0434\"});}else if(location.pathname===\"/sign-in\"){return/*#__PURE__*/_jsx(Link,{to:\"/sign-up\",className:\"header__link\",children:\"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"});}else if(isLoggedIn){return/*#__PURE__*/_jsxs(\"div\",{className:\"header__nav\",children:[email,/*#__PURE__*/_jsx(Link,{className:\"header__link\",to:'/sign-in',onClick:onSignOut,children:\"\\u0412\\u044B\\u0439\\u0442\\u0438\"})]});}};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"header\",{className:\"header\",children:[/*#__PURE__*/_jsx(\"img\",{src:logo,alt:\"\\u043B\\u043E\\u0433\\u043E\\u0442\\u0438\\u043F \\u0441\\u0430\\u0439\\u0442\\u0430\",className:\"header__logo\"}),/*#__PURE__*/_jsx(\"button\",{className:\"menu-toggle \".concat(isMenuOpen?\"open\":\"\"),onClick:handleToggleMenu,children:isMenuOpen?/*#__PURE__*/_jsx(\"span\",{className:\"popup__close-button\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{className:\"menu-toggle__bar\"}),/*#__PURE__*/_jsx(\"span\",{className:\"menu-toggle__bar\"}),/*#__PURE__*/_jsx(\"span\",{className:\"menu-toggle__bar\"})]})}),/*#__PURE__*/_jsx(\"nav\",{className:\"menu \".concat(isMenuOpen?\"open\":\"\"),children:renderHeaderText()})]})});}//мозгов ни у меня, ни у chatGPT не хватает доработать бургер-меню. Потом доделаю (это вроде не обязательное задание)\nexport default Header;// import React from \"react\";\n// import { useLocation, Link } from \"react-router-dom\";\n// import logo from \"../images/header-logo.svg\";\n// function Header({isLoggedIn, email, onSignOut}) {\n//   const location = useLocation();\n//   const renderHeaderText = () => {\n//     if (location.pathname === \"/sign-up\") {\n//       return (\n//         <Link to=\"/sign-in\" className=\"header__link\">\n//           Вход\n//         </Link>\n//       );\n//     } else if (location.pathname === \"/sign-in\") {\n//       return (\n//         <Link to=\"/sign-up\" className=\"header__link\">\n//           Регистрация\n//         </Link>\n//       );\n//     } else if (isLoggedIn) {\n//       return (\n//         <div className=\"header__nav\">\n//           {email}\n//           <Link className='header__link' to={'/sign-in'} onClick={onSignOut}>\n//               Выйти\n//           </Link>\n//         </div>\n//       );\n//     }\n//   };\n//   return (\n//     <>\n//       <header className=\"header\">\n//         <img src={logo} alt=\"логотип сайта\" className=\"header__logo\" />\n//         {renderHeaderText()}\n//       </header>\n//     </>\n//   );\n// }\n// export default Header;","map":{"version":3,"names":["React","useState","useLocation","Link","logo","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Header","_ref","isLoggedIn","email","onSignOut","location","_useState","_useState2","_slicedToArray","isMenuOpen","setIsMenuOpen","handleToggleMenu","renderHeaderText","pathname","to","className","children","onClick","src","alt","concat"],"sources":["/Users/ifloki/Documents/Dev/react-mesto-auth/src/components/Header.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport logo from \"../images/header-logo.svg\";\n\nfunction Header({ isLoggedIn, email, onSignOut }) {\n  const location = useLocation();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n  const handleToggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n\n  const renderHeaderText = () => {\n        if (location.pathname === \"/sign-up\") {\n          return (\n            <Link to=\"/sign-in\" className=\"header__link\">\n              Вход\n            </Link>\n          );\n        } else if (location.pathname === \"/sign-in\") {\n          return (\n            <Link to=\"/sign-up\" className=\"header__link\">\n              Регистрация\n            </Link>\n          );\n        } else if (isLoggedIn) {\n          return (\n            <div className=\"header__nav\">\n              {email}\n              <Link className='header__link' to={'/sign-in'} onClick={onSignOut}>\n                  Выйти\n              </Link>\n            </div>\n          );\n        }\n      };\n\n  return (\n    <>\n      <header className=\"header\">\n        <img src={logo} alt=\"логотип сайта\" className=\"header__logo\" />\n        <button className={`menu-toggle ${isMenuOpen ? \"open\" : \"\"}`} onClick={handleToggleMenu}>\n          {isMenuOpen ? (\n            <span className=\"popup__close-button\" />\n          ) : (\n            <>\n              <span className=\"menu-toggle__bar\" />\n              <span className=\"menu-toggle__bar\" />\n              <span className=\"menu-toggle__bar\" />\n            </>\n          )}\n        </button>\n        <nav className={`menu ${isMenuOpen ? \"open\" : \"\"}`}>\n          {renderHeaderText()}\n        </nav>\n      </header>\n    </>\n  );\n}\n\n//мозгов ни у меня, ни у chatGPT не хватает доработать бургер-меню. Потом доделаю (это вроде не обязательное задание)\n\nexport default Header;\n\n\n\n\n// import React from \"react\";\n// import { useLocation, Link } from \"react-router-dom\";\n// import logo from \"../images/header-logo.svg\";\n\n\n// function Header({isLoggedIn, email, onSignOut}) {\n//   const location = useLocation();\n \n\n//   const renderHeaderText = () => {\n//     if (location.pathname === \"/sign-up\") {\n//       return (\n//         <Link to=\"/sign-in\" className=\"header__link\">\n//           Вход\n//         </Link>\n//       );\n//     } else if (location.pathname === \"/sign-in\") {\n//       return (\n//         <Link to=\"/sign-up\" className=\"header__link\">\n//           Регистрация\n//         </Link>\n//       );\n//     } else if (isLoggedIn) {\n//       return (\n//         <div className=\"header__nav\">\n//           {email}\n//           <Link className='header__link' to={'/sign-in'} onClick={onSignOut}>\n//               Выйти\n//           </Link>\n//         </div>\n//       );\n//     }\n//   };\n\n//   return (\n//     <>\n//       <header className=\"header\">\n//         <img src={logo} alt=\"логотип сайта\" className=\"header__logo\" />\n//         {renderHeaderText()}\n//       </header>\n//     </>\n//   );\n// }\n\n// export default Header;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}