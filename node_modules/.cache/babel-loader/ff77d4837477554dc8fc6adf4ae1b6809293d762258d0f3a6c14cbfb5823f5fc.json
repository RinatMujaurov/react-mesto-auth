{"ast":null,"code":"var _jsxFileName = \"/Users/ifloki/Documents/Dev/mesto-react/src/components/EditAvatarPopup.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EditAvatarPopup(props) {\n  _s();\n  const avatarRef = useRef();\n  useEffect(() => {\n    if (!props.isOpen) {\n      avatarRef.current.value = \"\";\n    }\n  }, [props.isOpen]);\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onUpdateAvatar({\n      avatar: avatarRef.current.value\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: \"avatar\",\n    title: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n    isOpen: props.isOpen,\n    onClose: props.onClose,\n    onSubmit: handleSubmit,\n    buttonText: \"Сохранить\",\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"popup__fieldset\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"popup__input popup__input_data_link\",\n          type: \"url\",\n          id: \"link-avatar-input\",\n          name: \"avatar\",\n          placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n          required: true,\n          ref: avatarRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"popup__input-error link-input-error\",\n          id: \"link-avatar-input-error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(EditAvatarPopup, \"i3A8oX/ZqNHll67C7LWBaRG0gLQ=\");\n_c = EditAvatarPopup;\nexport default EditAvatarPopup;\nvar _c;\n$RefreshReg$(_c, \"EditAvatarPopup\");","map":{"version":3,"names":["React","useRef","PopupWithForm","jsxDEV","_jsxDEV","Fragment","_Fragment","EditAvatarPopup","props","_s","avatarRef","useEffect","isOpen","current","value","handleSubmit","e","preventDefault","onUpdateAvatar","avatar","name","title","onClose","onSubmit","buttonText","children","className","type","id","placeholder","required","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ifloki/Documents/Dev/mesto-react/src/components/EditAvatarPopup.js"],"sourcesContent":["import React, { useRef } from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction EditAvatarPopup(props) {\n  const avatarRef = useRef();\n\n  useEffect(() => {\n    if (!props.isOpen) {\n      avatarRef.current.value = \"\";\n    }\n  }, [props.isOpen]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onUpdateAvatar({\n      avatar: avatarRef.current.value,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      name=\"avatar\"\n      title=\"Обновить аватар\"\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n      buttonText={\"Сохранить\"}\n      children={\n        <>\n          <label className=\"popup__fieldset\">\n            <input\n              className=\"popup__input popup__input_data_link\"\n              type=\"url\"\n              id=\"link-avatar-input\"\n              name=\"avatar\"\n              placeholder=\"Ссылка на аватар\"\n              required\n              ref={avatarRef}\n            />\n            <span\n              className=\"popup__input-error link-input-error\"\n              id=\"link-avatar-input-error\"\n            ></span>\n          </label>\n        </>\n      }\n    />\n  );\n}\n\nexport default EditAvatarPopup;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5C,SAASC,eAAeA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC9B,MAAMC,SAAS,GAAGT,MAAM,CAAC,CAAC;EAE1BU,SAAS,CAAC,MAAM;IACd,IAAI,CAACH,KAAK,CAACI,MAAM,EAAE;MACjBF,SAAS,CAACG,OAAO,CAACC,KAAK,GAAG,EAAE;IAC9B;EACF,CAAC,EAAE,CAACN,KAAK,CAACI,MAAM,CAAC,CAAC;EAElB,SAASG,YAAYA,CAACC,CAAC,EAAE;IACvBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBT,KAAK,CAACU,cAAc,CAAC;MACnBC,MAAM,EAAET,SAAS,CAACG,OAAO,CAACC;IAC5B,CAAC,CAAC;EACJ;EAEA,oBACEV,OAAA,CAACF,aAAa;IACZkB,IAAI,EAAC,QAAQ;IACbC,KAAK,EAAC,uFAAiB;IACvBT,MAAM,EAAEJ,KAAK,CAACI,MAAO;IACrBU,OAAO,EAAEd,KAAK,CAACc,OAAQ;IACvBC,QAAQ,EAAER,YAAa;IACvBS,UAAU,EAAE,WAAY;IACxBC,QAAQ,eACNrB,OAAA,CAAAE,SAAA;MAAAmB,QAAA,eACErB,OAAA;QAAOsB,SAAS,EAAC,iBAAiB;QAAAD,QAAA,gBAChCrB,OAAA;UACEsB,SAAS,EAAC,qCAAqC;UAC/CC,IAAI,EAAC,KAAK;UACVC,EAAE,EAAC,mBAAmB;UACtBR,IAAI,EAAC,QAAQ;UACbS,WAAW,EAAC,wFAAkB;UAC9BC,QAAQ;UACRC,GAAG,EAAErB;QAAU;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB,CAAC,eACF/B,OAAA;UACEsB,SAAS,EAAC,qCAAqC;UAC/CE,EAAE,EAAC;QAAyB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC,gBACR;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEN;AAAC1B,EAAA,CA7CQF,eAAe;AAAA6B,EAAA,GAAf7B,eAAe;AA+CxB,eAAeA,eAAe;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}